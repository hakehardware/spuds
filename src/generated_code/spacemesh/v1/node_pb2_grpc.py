# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from src.generated_code.spacemesh.v1 import node_types_pb2 as spacemesh_dot_v1_dot_node__types__pb2


class NodeServiceStub(object):
    """Readonly basic node data
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Echo = channel.unary_unary(
                '/spacemesh.v1.NodeService/Echo',
                request_serializer=spacemesh_dot_v1_dot_node__types__pb2.EchoRequest.SerializeToString,
                response_deserializer=spacemesh_dot_v1_dot_node__types__pb2.EchoResponse.FromString,
                )
        self.Version = channel.unary_unary(
                '/spacemesh.v1.NodeService/Version',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=spacemesh_dot_v1_dot_node__types__pb2.VersionResponse.FromString,
                )
        self.Build = channel.unary_unary(
                '/spacemesh.v1.NodeService/Build',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=spacemesh_dot_v1_dot_node__types__pb2.BuildResponse.FromString,
                )
        self.Status = channel.unary_unary(
                '/spacemesh.v1.NodeService/Status',
                request_serializer=spacemesh_dot_v1_dot_node__types__pb2.StatusRequest.SerializeToString,
                response_deserializer=spacemesh_dot_v1_dot_node__types__pb2.StatusResponse.FromString,
                )
        self.NodeInfo = channel.unary_unary(
                '/spacemesh.v1.NodeService/NodeInfo',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=spacemesh_dot_v1_dot_node__types__pb2.NodeInfoResponse.FromString,
                )
        self.StatusStream = channel.unary_stream(
                '/spacemesh.v1.NodeService/StatusStream',
                request_serializer=spacemesh_dot_v1_dot_node__types__pb2.StatusStreamRequest.SerializeToString,
                response_deserializer=spacemesh_dot_v1_dot_node__types__pb2.StatusStreamResponse.FromString,
                )
        self.ErrorStream = channel.unary_stream(
                '/spacemesh.v1.NodeService/ErrorStream',
                request_serializer=spacemesh_dot_v1_dot_node__types__pb2.ErrorStreamRequest.SerializeToString,
                response_deserializer=spacemesh_dot_v1_dot_node__types__pb2.ErrorStreamResponse.FromString,
                )


class NodeServiceServicer(object):
    """Readonly basic node data
    """

    def Echo(self, request, context):
        """A simple test endpoint
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Version(self, request, context):
        """Returns the version of the node software as a semver string
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Build(self, request, context):
        """Returns the github commit hash used to build the node
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Status(self, request, context):
        """Current node status (net and sync)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NodeInfo(self, request, context):
        """NodeInfo is a node configuration info.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StatusStream(self, request, context):
        """//////// Node streaming data

        Node status events (sync and net)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ErrorStream(self, request, context):
        """Node error events
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_NodeServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Echo': grpc.unary_unary_rpc_method_handler(
                    servicer.Echo,
                    request_deserializer=spacemesh_dot_v1_dot_node__types__pb2.EchoRequest.FromString,
                    response_serializer=spacemesh_dot_v1_dot_node__types__pb2.EchoResponse.SerializeToString,
            ),
            'Version': grpc.unary_unary_rpc_method_handler(
                    servicer.Version,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=spacemesh_dot_v1_dot_node__types__pb2.VersionResponse.SerializeToString,
            ),
            'Build': grpc.unary_unary_rpc_method_handler(
                    servicer.Build,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=spacemesh_dot_v1_dot_node__types__pb2.BuildResponse.SerializeToString,
            ),
            'Status': grpc.unary_unary_rpc_method_handler(
                    servicer.Status,
                    request_deserializer=spacemesh_dot_v1_dot_node__types__pb2.StatusRequest.FromString,
                    response_serializer=spacemesh_dot_v1_dot_node__types__pb2.StatusResponse.SerializeToString,
            ),
            'NodeInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.NodeInfo,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=spacemesh_dot_v1_dot_node__types__pb2.NodeInfoResponse.SerializeToString,
            ),
            'StatusStream': grpc.unary_stream_rpc_method_handler(
                    servicer.StatusStream,
                    request_deserializer=spacemesh_dot_v1_dot_node__types__pb2.StatusStreamRequest.FromString,
                    response_serializer=spacemesh_dot_v1_dot_node__types__pb2.StatusStreamResponse.SerializeToString,
            ),
            'ErrorStream': grpc.unary_stream_rpc_method_handler(
                    servicer.ErrorStream,
                    request_deserializer=spacemesh_dot_v1_dot_node__types__pb2.ErrorStreamRequest.FromString,
                    response_serializer=spacemesh_dot_v1_dot_node__types__pb2.ErrorStreamResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'spacemesh.v1.NodeService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class NodeService(object):
    """Readonly basic node data
    """

    @staticmethod
    def Echo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/spacemesh.v1.NodeService/Echo',
            spacemesh_dot_v1_dot_node__types__pb2.EchoRequest.SerializeToString,
            spacemesh_dot_v1_dot_node__types__pb2.EchoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Version(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/spacemesh.v1.NodeService/Version',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            spacemesh_dot_v1_dot_node__types__pb2.VersionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Build(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/spacemesh.v1.NodeService/Build',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            spacemesh_dot_v1_dot_node__types__pb2.BuildResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Status(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/spacemesh.v1.NodeService/Status',
            spacemesh_dot_v1_dot_node__types__pb2.StatusRequest.SerializeToString,
            spacemesh_dot_v1_dot_node__types__pb2.StatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NodeInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/spacemesh.v1.NodeService/NodeInfo',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            spacemesh_dot_v1_dot_node__types__pb2.NodeInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StatusStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/spacemesh.v1.NodeService/StatusStream',
            spacemesh_dot_v1_dot_node__types__pb2.StatusStreamRequest.SerializeToString,
            spacemesh_dot_v1_dot_node__types__pb2.StatusStreamResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ErrorStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/spacemesh.v1.NodeService/ErrorStream',
            spacemesh_dot_v1_dot_node__types__pb2.ErrorStreamRequest.SerializeToString,
            spacemesh_dot_v1_dot_node__types__pb2.ErrorStreamResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
